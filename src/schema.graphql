type Query {
  city(where: CommonInputWhere): [City]!
  place(where: CommonInputWhere): [Place]!
  comment(where: CommonInputWhere): [Comment]!
}

type Mutation {
  insertCity(set: CityInput!): CityWithoutPlaces
  updateCity(set: CityInput!, where: IdInput!): CityWithoutPlaces
  deleteCity(where: IdInput!): CityWithoutPlaces

  insertPlace(set: PlaceInput!): PlaceWithoutComments
  updatePlace(set: PlaceInput!, where: IdInput!): PlaceWithoutComments
  deletePlace(where: IdInput!): PlaceWithoutComments

  insertComment(set: CommentInput!): Comment
  updateComment(set: CommentInput!, where: IdInput!): Comment
  deleteComment(where: IdInput!): Comment
}

type City {
  id: Int
  name: String
  location: String
  description: String
  population: Int
  imageUrl: String
  places: [PlaceWithoutComments]!
}

type CityWithoutPlaces {
  id: Int
  name: String
  location: String
  description: String
  population: Int
  imageUrl: String
}

type Place {
  id: Int
  name: String
  location: String
  description: String
  imageUrl: String
  comments: [Comment]!
}

type PlaceWithoutComments {
  id: Int
  name: String
  location: String
  description: String
  imageUrl: String
}

type Comment {
  id: Int
  content: String
  userName: String
}

input IdInput {
  id: Int
}

input CommonInputWhere {
  id: Int
  name: String
}

input CityInput {
  name: String
  location: String
  description: String
  imageUrl: String
  population: Int
}

input PlaceInput {
  name: String
  location: String
  description: String
  imageUrl: String
  cityId: Int
}

input CommentInput {
  content: String
  userName: String
  placeId: Int
}

input CommentWhere {
  id: Int
  userName: String
}