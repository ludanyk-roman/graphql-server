type Query {
  city(where: CommonWhere): [City]!
  place(where: CommonWhere): [Place]!
  comment(where: CommentWhere): [Comment]!
}

type Mutation {
  insertCity(set: CityInput!): City
  updateCity(set: CityInput!, where: IdInput!): City
  deleteCity(where: IdInput!): City

  insertPlace(set: PlaceInput!): Place
  updatePlace(set: PlaceInput!, where: IdInput!): Place
  deletePlace(where: IdInput!): Place

  insertComment(set: CommentInput!): Comment
  updateComment(set: CommentInput!, where: IdInput!): Comment
  deleteComment(where: IdInput!): Comment
}

input IdInput {
  id: Int
}

input CommonWhere {
  id: Int
  name: String
}

type City {
  id: Int
  name: String
  location: String
  description: String
  population: Int
  imageUrl: String
}

input CityInput {
  name: String
  location: String
  description: String
  imageUrl: String
  population: Int
}

type Place {
  id: Int
  name: String
  location: String
  description: String
  imageUrl: String
}

input PlaceInput {
  name: String
  location: String
  description: String
  imageUrl: String
  cityId: Int
}

type Comment {
  id: Int
  content: String
  userName: String
}

input CommentInput {
  content: String
  userName: String
  placeId: Int
}

input CommentWhere {
  id: Int
  userName: String
}